AllCops:
  Exclude:
    # The following directories are excluded by default.
    - 'node_modules/**/*'
    - 'vendor/**/*'
    - '.git/**/*'
    # db/schema.rb is generated automatically.
    - 'db/schema.rb'
  DisplayStyleGuide: true

# The commented out entries are the same as `https://github.com/rubocop-hq/rubocop/blob/master/config/default.yml`.

# Current Changes (memo)
#   Layout/Tab -> disabled

#################### Bundler ###############################

# Bundler/DuplicatedGem:
#   Enabled: true
# Bundler/GemComment:
#   Enabled: false
# Bundler/InsecureProtocolSource:
#   Enabled: true
Bundler/OrderedGems:
  Enabled: false

#################### Gemspec ###############################

# Gemspec/DuplicatedAssignment:
#   Enabled: true
Gemspec/OrderedDependencies:
  Enabled: false
# Gemspec/RequiredRubyVersion:
#   Enabled: true

#################### Layout ###########################

Layout/AccessModifierIndentation:
  Enabled: false
Layout/AlignArguments:
  Enabled: false
Layout/AlignArray:
  Enabled: false
Layout/AlignHash:
  Enabled: false
Layout/AlignParameters:
  Enabled: false
Layout/BlockAlignment:
  Enabled: false
Layout/BlockEndNewline:
  Enabled: false # true?
Layout/CaseIndentation:
  Enabled: false
# Layout/ClassStructure:
#   Enabled: false
Layout/ClosingHeredocIndentation:
  Enabled: false
Layout/ClosingParenthesisIndentation:
  Enabled: false
Layout/CommentIndentation:
  Enabled: false
# Makes sence to put the same line as if/unless/until. It is like the Lint/ElseLayout cop.
# Layout/ConditionPosition:
#   Enabled: true
Layout/DefEndAlignment:
  Enabled: false # true?
Layout/DotPosition:
  Enabled: false
Layout/ElseAlignment:
  Enabled: false # true?
# Empty comment is unnecessary
# Layout/EmptyComment:
#   Enabled: true
Layout/EmptyLineAfterGuardClause:
  Enabled: false
Layout/EmptyLineAfterMagicComment:
  Enabled: false
Layout/EmptyLineBetweenDefs:
  Enabled: false # true?
Layout/EmptyLines:
  Enabled: false
Layout/EmptyLinesAroundAccessModifier:
  Enabled: false
# The empty line obviously makes us confuse
# Layout/EmptyLinesAroundArguments:
#   Enabled: true
Layout/EmptyLinesAroundBeginBody:
  Enabled: false # true?
Layout/EmptyLinesAroundBlockBody:
  Enabled: false # true?
Layout/EmptyLinesAroundClassBody:
  Enabled: false
Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: false # true?
Layout/EmptyLinesAroundMethodBody:
  Enabled: false # true?
Layout/EmptyLinesAroundModuleBody:
  Enabled: false
Layout/EndAlignment:
  Enabled: false
Layout/EndOfLine:
  Enabled: false
Layout/ExtraSpacing:
  Enabled: false
# Layout/FirstArrayElementLineBreak:
#   Enabled: false
# Layout/FirstHashElementLineBreak:
#   Enabled: false
# Layout/FirstMethodArgumentLineBreak:
#   Enabled: false
# Layout/FirstMethodParameterLineBreak:
#   Enabled: false
# Layout/HeredocArgumentClosingParenthesis:
#   Enabled: false
Layout/IndentAssignment:
  Enabled: false
Layout/IndentFirstArgument:
  Enabled: false
Layout/IndentFirstArrayElement:
  Enabled: false
Layout/IndentFirstHashElement:
  Enabled: false
Layout/IndentFirstParameter:
  Enabled: false
Layout/IndentHeredoc:
  Enabled: false
Layout/IndentationConsistency:
  Enabled: false
Layout/IndentationWidth:
  Enabled: false
Layout/InitialIndentation:
  Enabled: false # true?
Layout/LeadingBlankLines:
  Enabled: false
Layout/LeadingCommentSpace:
  Enabled: false
Layout/MultilineArrayBraceLayout:
  Enabled: false
# Layout/MultilineArrayLineBreaks:
#   Enabled: false
# Layout/MultilineAssignmentLayout:
#   Enabled: false
Layout/MultilineBlockLayout:
  Enabled: false
Layout/MultilineHashBraceLayout:
  Enabled: false
# Layout/MultilineHashKeyLineBreaks:
#   Enabled: false
# Layout/MultilineMethodArgumentLineBreaks:
#   Enabled: false
Layout/MultilineMethodCallBraceLayout:
  Enabled: false
Layout/MultilineMethodCallIndentation:
  Enabled: false
Layout/MultilineMethodDefinitionBraceLayout:
  Enabled: false
Layout/MultilineOperationIndentation:
  Enabled: false
Layout/RescueEnsureAlignment:
  Enabled: false # true?
Layout/SpaceAfterColon:
  Enabled: false
Layout/SpaceAfterComma:
  Enabled: false
Layout/SpaceAfterMethodName:
  Enabled: false
Layout/SpaceAfterNot:
  Enabled: false
Layout/SpaceAfterSemicolon:
  Enabled: false
Layout/SpaceAroundBlockParameters:
  Enabled: false
Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: false
Layout/SpaceAroundKeyword:
  Enabled: false
Layout/SpaceAroundOperators:
  Enabled: false
Layout/SpaceBeforeBlockBraces:
  Enabled: false
Layout/SpaceBeforeComma:
  Enabled: false
Layout/SpaceBeforeComment:
  Enabled: false
Layout/SpaceBeforeFirstArg:
  Enabled: false
Layout/SpaceBeforeSemicolon:
  Enabled: false
Layout/SpaceInLambdaLiteral:
  Enabled: false
Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: false
Layout/SpaceInsideArrayPercentLiteral:
  Enabled: false
Layout/SpaceInsideBlockBraces:
  Enabled: false
Layout/SpaceInsideHashLiteralBraces:
  Enabled: false
Layout/SpaceInsideParens:
  Enabled: false
Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: false
Layout/SpaceInsideRangeLiteral:
  Enabled: false
Layout/SpaceInsideReferenceBrackets:
  Enabled: false
Layout/SpaceInsideStringInterpolation:
  Enabled: false
Layout/Tab:
  Enabled: false
Layout/TrailingBlankLines:
  Enabled: false # true?
Layout/TrailingWhitespace:
  Enabled: false

#################### Lint ##################################

# Lint/AmbiguousBlockAssociation:
#   Enabled: true
# Lint/AmbiguousOperator:
#   Enabled: true
Lint/AmbiguousRegexpLiteral:
  Enabled: false # true?
# Assignments in the conditions is an effective way if used correctly
Lint/AssignmentInCondition:
  Enabled: false
# Lint/BigDecimalNew:
#   Enabled: true
# Lint/BooleanSymbol:
#   Enabled: true
# Lint/CircularArgumentReference:
#   Enabled: true
# Lint/Debugger:
#   Enabled: true
# Lint/DeprecatedClassMethods:
#   Enabled: true
# Lint/DisjunctiveAssignmentInConstructor:
#   Enabled: true
# Lint/DuplicateCaseCondition:
#   Enabled: true
# Lint/DuplicateMethods:
#   Enabled: true
# Lint/DuplicatedKey:
#   Enabled: true
# Lint/EachWithObjectArgument:
#   Enabled: true
# Lint/ElseLayout:
#   Enabled: true
# Lint/EmptyEnsure:
#   Enabled: true
# Lint/EmptyExpression:
#   Enabled: true
# Lint/EmptyInterpolation:
#   Enabled: true
# A `when` branch without a body may indicate "noop if this condition is true"
Lint/EmptyWhen:
  Enabled: false
# Lint/EndInMethod:
#   Enabled: true
# Lint/EnsureReturn:
#   Enabled: true
# Lint/ErbNewArguments:
#   Enabled: true
# Lint/FlipFlop:
#   Enabled: true
# Lint/FloatOutOfRange:
#   Enabled: true
# Lint/FormatParameterMismatch:
#   Enabled: true
# A `rescue` block without a body may indicate "ignore if the exception is raised"
Lint/HandleExceptions:
  Enabled: false
# Lint/HeredocMethodCallPosition:
#   Enabled: false
# Lint/ImplicitStringConcatenation:
#   Enabled: true
# Lint/IneffectiveAccessModifier:
#   Enabled: true
# Lint/InheritException:
#   Enabled: true
# Lint/InterpolationCheck:
#   Enabled: true
# Lint/LiteralAsCondition:
#   Enabled: true
# Lint/LiteralInInterpolation:
#   Enabled: true
Lint/Loop:
  Enabled: false
# Lint/MissingCopEnableDirective:
#   Enabled: true
# Lint/MultipleCompare:
#   Enabled: true
# Lint/NestedMethodDefinition:
#   Enabled: true
# Lint/NestedPercentLiteral:
#   Enabled: true
# Lint/NextWithoutAccumulator:
#   Enabled: true
# Lint/NonLocalExitFromIterator:
#   Enabled: true
# Lint/NumberConversion:
#   Enabled: false
# Lint/OrderedMagicComments:
#   Enabled: false
# Lint/ParenthesesAsGroupedExpression:
#   Enabled: true
# Lint/PercentStringArray:
#   Enabled: true
# Lint/PercentSymbolArray:
#   Enabled: true
# Lint/RandOne:
#   Enabled: true
# Lint/RedundantWithIndex:
#   Enabled: true
# Lint/RedundantWithObject:
#   Enabled: true
# Lint/RegexpAsCondition:
#   Enabled: true
# Lint/RequireParentheses:
#   Enabled: true
# In some cases rescuing the Exception class makes sense
Lint/RescueException:
  Enabled: false
# Lint/RescueType:
#   Enabled: true
# Lint/ReturnInVoidContext:
#   Enabled: true
# Lint/SafeNavigationChain:
#   Enabled: true
# Lint/SafeNavigationConsistency:
#   Enabled: true
# Lint/SafeNavigationWithEmpty:
#   Enabled: true
# Lint/ScriptPermission:
#   Enabled: true
# Lint/ShadowedArgument:
#   Enabled: true
# Lint/ShadowedException:
#   Enabled: true
# Lint/ShadowingOuterLocalVariable:
#   Enabled: true # false?
# Lint/StringConversionInInterpolation:
#   Enabled: true
# Lint/Syntax:
#   Enabled: true
# Lint/ToJSON:
#   Enabled: true
# Lint/UnderscorePrefixedVariableName:
#   Enabled: true
# Lint/UnifiedInteger:
#   Enabled: true
# This comment is not a criminal
Lint/UnneededCopDisableDirective:
  Enabled: false
# Lint/UnneededCopEnableDirective:
#   Enabled: true
# Lint/UnneededRequireStatement:
#   Enabled: true
# Lint/UnneededSplatExpansion:
#   Enabled: true
# Lint/UnreachableCode:
#   Enabled: true
Lint/UnusedBlockArgument:
  Enabled: false # true?
Lint/UnusedMethodArgument:
  Enabled: false # true?
# Lint/UriEscapeUnescape:
#   Enabled: true
# Lint/UriRegexp:
#   Enabled: true
# Lint/UselessAccessModifier:
#   Enabled: true
# Lint/UselessAssignment:
#   Enabled: true
# Lint/UselessComparison:
#   Enabled: true
# Lint/UselessElseWithoutRescue:
#   Enabled: true
# Lint/UselessSetterCall:
#   Enabled: true
# Lint/Void:
#   Enabled: true

#################### Metrics ###############################

# If AbcSize > 50, really really really really really really really complex
Metrics/AbcSize:
  Max: 50
# Use the default setting
Metrics/BlockNesting:
  Enabled: true
Metrics/BlockLength:
  Max: 30
  Exclude:
    # RuboCop's default
    - 'Rakefile'
    - '**/*.rake'
    - 'spec/**/*.rb'
    # In many cases, config/routes.rb has very long block
    - 'config/routes.rb'
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Max: 10
Metrics/LineLength:
  Max: 200
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
# 7 parameters are tooooooo many
Metrics/ParameterLists:
  Enabled: true
  Max: 7
# Use the default setting
Metrics/PerceivedComplexity:
  Enabled: true
# Use the default setting

Rails/ActiveRecordOverride:
  Enabled: false
Rails/ActiveSupportAliases:
  Enabled: false
Rails/Delegate:
  Enabled: false
Rails/FilePath:
  Enabled: false
Rails/HttpPositionalArguments:
  Enabled: false
Rails/Output:
  Enabled: false
Rails/OutputSafety:
  Enabled: false
Rails/PluralizationGrammar:
  Enabled: false
Rails/SkipsModelValidations:
  Enabled: false
Rails/ReadWriteAttribute:
  Enabled: false
Rails/RequestReferer:
  Enabled: false
Rails/SafeNavigation:
  Enabled: false
Rails/HttpStatus:
  Enabled: false
Rails/RefuteMethods:
  Enabled: false
Rails/AssertNot:
  Enabled: false

Security/Eval:
  Enabled: false
Security/MarshalLoad:
  Enabled: false
Security/YAMLLoad:
  Enabled: false

Naming/AccessorMethodName:
  Enabled: false
Naming/BinaryOperatorParameterName:
  Enabled: false
Naming/ConstantName:
  Enabled: false
Naming/FileName:
  Enabled: false
Naming/HeredocDelimiterNaming:
  Enabled: false
Naming/MethodName:
  Enabled: false
Naming/PredicateName:
  Enabled: false
Naming/RescuedExceptionsVariableName:
  Enabled: false
Naming/VariableName:
  Enabled: false
Naming/VariableNumber:
  Enabled: false
Naming/UncommunicativeBlockParamName:
  Enabled: false
Naming/UncommunicativeMethodParamName:
  Enabled: false

Style/Alias:
  Enabled: false
Style/AndOr:
  Enabled: false
Style/AsciiComments:
  Enabled: false
Style/Attr:
  Enabled: false
Style/BarePercentLiterals:
  Enabled: false
Style/BlockComments:
  Enabled: false
Style/BlockDelimiters:
  Enabled: false
Style/BracesAroundHashParameters:
  Enabled: false
Style/CaseEquality:
  Enabled: false
Style/CharacterLiteral:
  Enabled: false
Style/ClassAndModuleChildren:
  Enabled: false
Style/ClassCheck:
  Enabled: false
Style/ClassVars:
  Enabled: false
Style/CollectionMethods:
  Enabled: false
Style/ColonMethodCall:
  Enabled: false
Style/CommandLiteral:
  Enabled: false
Style/CommentAnnotation:
  Enabled: false
Style/CommentedKeyword:
  Enabled: false
Style/ConditionalAssignment:
  Enabled: false
Style/DefWithParentheses:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/DoubleNegation:
  Enabled: false
Style/EmptyCaseCondition:
  Enabled: false
Style/EmptyElse:
  Enabled: false
Style/EmptyLambdaParameter:
  Enabled: false
Style/EmptyLiteral:
  Enabled: false
Style/EmptyMethod:
  Enabled: false
Style/Encoding:
  Enabled: false
Style/EndBlock:
  Enabled: false
Style/EvenOdd:
  Enabled: false
Style/For:
  Enabled: false
Style/FormatString:
  Enabled: false
Style/FormatStringToken:
  Enabled: false
Style/FrozenStringLiteralComment:
  Enabled: false
Style/GuardClause:
  Enabled: false
Style/HashSyntax:
  Enabled: false
Style/IfInsideElse:
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false
Style/InfiniteLoop:
  Enabled: false
Style/InverseMethods:
  Enabled: false
Style/Lambda:
  Enabled: false
Style/LambdaCall:
  Enabled: false
Style/LineEndConcatenation:
  Enabled: false
Style/MethodCallWithArgsParentheses:
  Enabled: false
Style/MethodCallWithoutArgsParentheses:
  Enabled: false
Style/MethodDefParentheses:
  Enabled: false
Style/MethodMissingSuper:
  Enabled: false
Style/MissingRespondToMissing:
  Enabled: false
Style/MixinGrouping:
  Enabled: false
Style/ModuleFunction:
  Enabled: false
Style/MultilineBlockChain:
  Enabled: false
Style/MultilineIfThen:
  Enabled: false
Style/MultilineMemoization:
  Enabled: false
Style/MultilineIfModifier:
  Enabled: false
Style/MultilineTernaryOperator:
  Enabled: false
Style/MultipleComparison:
  Enabled: false
Style/MutableConstant:
  Enabled: false
Style/NegatedIf:
  Enabled: false
Style/NegatedUnless:
  Enabled: false
Style/NegatedWhile:
  Enabled: false
Style/NestedParenthesizedCalls:
  Enabled: false
Style/NestedTernaryOperator:
  Enabled: false
Style/Next:
  Enabled: false
Style/NilComparison:
  Enabled: false
Style/NonNilCheck:
  Enabled: false
Style/Not:
  Enabled: false
Style/NumericLiteralPrefix:
  Enabled: false
Style/NumericLiterals:
  Enabled: false
Style/NumericPredicate:
  Enabled: false
Style/OneLineConditional:
  Enabled: false
Style/OptionalArguments:
  Enabled: false
Style/OptionHash:
  Enabled: false
Style/ParallelAssignment:
  Enabled: false
Style/PercentLiteralDelimiters:
  Enabled: false
Style/PercentQLiterals:
  Enabled: false
Style/PerlBackrefs:
  Enabled: false
Style/PreferredHashMethods:
  Enabled: false
Style/Proc:
  Enabled: false
Style/RaiseArgs:
  Enabled: false
Style/RedundantBegin:
  Enabled: false
Style/RedundantException:
  Enabled: false
Style/RedundantParentheses:
  Enabled: false
Style/RedundantReturn:
  Enabled: false
Style/RedundantSelf:
  Enabled: false
Style/RegexpLiteral:
  Enabled: false
Style/RescueModifier:
  Enabled: false
Style/Semicolon:
  Enabled: false
Style/Send:
  Enabled: false
Style/SignalException:
  Enabled: false
Style/SingleLineBlockParams:
  Enabled: false
Style/SingleLineMethods:
  Enabled: false
Style/SpecialGlobalVars:
  Enabled: false
Style/StabbyLambdaParentheses:
  Enabled: false
Style/StringLiterals:
  Enabled: false
Style/StringLiteralsInInterpolation:
  Enabled: false
Style/StringMethods:
  Enabled: false
Style/StructInheritance:
  Enabled: false
Style/SymbolArray:
  Enabled: false
Style/SymbolLiteral:
  Enabled: false
Style/SymbolProc:
  Enabled: false
Style/TernaryParentheses:
  Enabled: false
Style/TrailingCommaInArguments:
  Enabled: false
Style/TrailingCommaInArrayLiteral:
  Enabled: false
Style/TrailingCommaInHashLiteral:
  Enabled: false
Style/TrailingUnderscoreVariable:
  Enabled: false
Style/TrivialAccessors:
  Enabled: false
Style/UnlessElse:
  Enabled: false
Style/UnneededInterpolation:
  Enabled: false
Style/UnneededPercentQ:
  Enabled: false
Style/WhenThen:
  Enabled: false
Style/WhileUntilDo:
  Enabled: false
Style/WhileUntilModifier:
  Enabled: false
Style/WordArray:
  Enabled: false
Style/YodaCondition:
  Enabled: false
Style/ZeroLengthPredicate:
  Enabled: false
Style/AccessModifierDeclarations:
  Enabled: false

# ------------- Enabled cops

# In many cases, hash keys should be a symbol, not a string.
Style/StringHashKeys:
  Enabled: true
